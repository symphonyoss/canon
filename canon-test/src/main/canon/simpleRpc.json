{
	"canon": "0.0.1",
	"info": {
		"title": "Canon Simple RPC Test Case",
		"license": {
			"name": "Apache2"
		}
	},
	"id": "org.symphonyoss.s2.canon.test.simpleRpc",
  "version": "1.0",
	"model": {
		"javaGenPackage": "org.symphonyoss.s2.canon.test.unit",
		"javaFacadePackage": "org.symphonyoss.s2.canon.test.unit.facade"
	},
	"methods": {
    "/keystore/cryptoRotationInfo/multiple": {
      "post": {
        "tags": [
          "Crypto"
        ],
        "payload": {
          "required": true,
          "multiple": true,
          "schema": {
            "$ref": "#/components/schemas/SbeId"
          }
        },
        "response": {
          "required": true,
          "multiple": true,
          "schema": {
            "$ref": "#/components/schemas/RotationIdInfo"
          }
        }
      }
    },
    "/docs/multiple": {
      "post": {
        "tags": [
          "Documents"
        ],
        "payload": {
          "required": true,
          "multiple": true,
          "schema": {
            "$ref": "#/components/schemas/Document"
          }
        },
        "response": {
          "required": true,
          "multiple": true,
          "schema": {
            "$ref": "#/components/schemas/RotationIdInfo"
          }
        }
      }
    },
    "/form/params": {
      "post": {
        "tags": [
          "Crypto"
        ],
        "parameters": {
          "customerId": {
            "description": "The ID of the customer of returned invoices",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/CustomerId"
            }
          }
        },
        "response": {
          "required": true,
          "multiple": true,
          "schema": {
            "$ref": "#/components/schemas/RotationIdInfo"
          }
        }
      }
    },
		"/invoices": {
			"summary": "Invoice operations.",
			"description": "Various operations at the invoice level.",
			"get": {
				"summary": "Fetch all invoices.",
				"description": "Various operations at the invoice collection level.",
				"tags": [
					"invoices"
				],
				"parameters": {
					"customerId": {
						"description": "The ID of the customer of returned invoices",
						"in": "query",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/CustomerId"
						}
					}
        },
        "parameterSets": [
					"#/components/parameterSets/pagination"
				],
				"response": {
					"schema": {
						"$ref": "#/components/schemas/DocumentList"
					}
				}
			},
			"post": {
				"tags": [
					"invoices"
				],
				"summary": "Create an invoice",
				"payload": {
					"required": true,
					"schema": {
						"$ref": "#/components/schemas/DocumentContent"
					}
				},
				"response": {
					"required": true,
					"schema": {
						"$ref": "#/components/schemas/Document"
					}
				}
			}
		},
		"/invoices/{invoiceId}": {
			"summary": "Invoice operations.",
			"description": "Various operations at the invoice level.",
			"parameters": {
          "invoiceId": {
            "description": "The ID of the required invoice",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DocumentId"
            }
          }
        },
      "get": {
				"tags": [
					"invoices"
				],
				"summary": "Fetch an invoice",
				"response": {
					"schema": {
						"$ref": "#/components/schemas/Document"
					}
				}
			}
		},
		"/invoices/{invoiceId}/items/{itemId}": {
			"summary": "Invoice line item operations.",
			"description": "Various operations at the invoice line item level.",
			"parameters": {
          "invoiceId": {
            "description": "The ID of the required invoice",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DocumentId"
            }
          },
          "itemId": {
            "description": "The ID of the required item",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ItemId"
            }
          }
        },
      "get": {
				"tags": [
					"invoices"
				],
				"response": {
					"schema": {
						"$ref": "#/components/schemas/Item"
					}
				}
			}
		},
		"/invoices/{invoiceId}/items": {
			"get": {
				"summary": "Invoice line item operations.",
				"description": "Various operations at the invoice line item collection level.",
				"tags": [
					"invoices"
				],
				"parameters": {
					"invoiceId": {
						"description": "The ID of the required invoice",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/DocumentId"
						}
					}
				},
				"parameterSets": [
					"#/components/parameterSets/pagination"
				],
				"response": {
					"schema": {
						"$ref": "#/components/schemas/ItemList"
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
      "SbeId": {
        "type": "string"
      },
      "RotationIdInfo": {
        "type": "object",
        "properties": {
          "myCurrentThreadId": {
            "type": "string"
          },
          "prettyName": {
            "type": "string"
          },
          "userName": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
			"CustomerId": {
				"description": "A customer ID.",
				"type": "integer",
				"format": "int64"
			},
			"ProductId": {
				"description": "A product ID.",
				"type": "string"
			},
			"DocumentId": {
				"description": "An invoice ID.",
				"type": "integer",
				"format": "int64"
			},
			"ItemId": {
				"description": "An item id on an invoice, statement etc.",
				"type": "integer",
				"format": "int32",
				"minimum": 0,
				"maximum": 100
			},
			"DocumentType": {
				"type": "string",
				"description": "The type of this document",
				"enum": [
					"Invoice",
					"Statement"
				]
			},
			"DocumentList": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/Document"
				}
			},
			"Document": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/DocumentId"
					},
					"content": {
						"$ref": "#/components/schemas/DocumentContent"
					}
				}
			},
			"DocumentContent": {
				"type": "object",
				"properties": {
					"documentType": {
						"$ref": "#/components/schemas/DocumentType"
					},
					"customerId": {
						"$ref": "#/components/schemas/CustomerId"
					},
					"date": {
						"description": "Document date (also tax point for invoices and credit notes).",
						"type": "integer",
						"format": "int64"
					},
					"currency": {
						"type": "string"
					},
					"goods": {
						"type": "integer",
						"format": "int64"
					},
					"tax": {
						"type": "integer",
						"format": "int64"
					},
					"total": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"ItemList": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/Item"
				}
			},
			"Item": {
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/ItemId"
					},
					"documentId": {
						"$ref": "#/components/schemas/DocumentId"
					},
					"productId": {
						"$ref": "#/components/schemas/ProductId"
					},
					"description": {
						"description": "Description of goods etc.",
						"type": "string"
					},
					"quantity": {
						"type": "integer",
						"format": "int32"
					},
					"goods": {
						"type": "integer",
						"format": "int64"
					},
					"tax": {
						"type": "integer",
						"format": "int64"
					},
					"total": {
						"type": "integer",
						"format": "int64"
					}
				}
			}
		},
		"parameterSets": {
			"pagination": {
				"skip": {
					"description": "number of items to skip",
					"in": "query",
					"required": false,
					"schema": {
						"type": "integer",
						"format": "int32"
					}
				},
				"limit": {
					"description": "max records to return",
					"in": "query",
					"required": false,
					"schema": {
						"type": "integer",
						"format": "int32"
					}
				}
			}
		}
	}
}